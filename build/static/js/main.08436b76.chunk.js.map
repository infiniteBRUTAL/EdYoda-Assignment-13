{"version":3,"sources":["Components/VideoCard/VideoCard.module.css","Components/PlayerSection/PlayerSection.module.css","Components/PlaylistSection/PlaylistSection.module.css","Utils/APIEndpoints.js","Components/PlayerSection/PlayerSection.js","Components/VideoCard/VideoCard.js","Components/PlaylistSection/PlaylistSection.js","App.js","serviceWorker.js","index.js"],"names":["module","exports","VIDEO_DATA","PlayerSection","state","id","data","axios","get","then","response","setState","prevProps","prevState","snapshot","props","match","params","vid","currentId","classes","MainContainer","vimeoId","Video","DescriptionContainer","DetailsSection","Views","views","Icons","Like","isLiked","Yellow","Comments","Bookmark","DescTitle","title","Description","description","React","Component","VideoCard","handleClick","parentState","vidId","to","this","className","Link","onClick","link","videoId","Thumbnail","src","thumbnail","alt","Title","PlaylistSection","history","push","map","App","changeId","path","render","location","pathname","split","Boolean","window","hostname","ReactDOM","StrictMode","document","getElementById","navigator","serviceWorker","ready","registration","unregister","catch","error","console","message"],"mappings":"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","file":"static/js/main.08436b76.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"link\":\"VideoCard_link__32jcu\",\"CardContainer\":\"VideoCard_CardContainer__1wjzz\",\"Yellow\":\"VideoCard_Yellow__2FzA_\",\"VideoCard\":\"VideoCard_VideoCard__yZ_vD\",\"Thumbnail\":\"VideoCard_Thumbnail__3Qblk\",\"Title\":\"VideoCard_Title__sYrnZ\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"MainContainer\":\"PlayerSection_MainContainer__13SLD\",\"Video\":\"PlayerSection_Video__32VMN\",\"DetailsSection\":\"PlayerSection_DetailsSection__D6ghg\",\"DescTitle\":\"PlayerSection_DescTitle__u5EiN\",\"Description\":\"PlayerSection_Description__1pUvD\",\"Views\":\"PlayerSection_Views__23ylW\",\"Icons\":\"PlayerSection_Icons__2tRC_\",\"Yellow\":\"PlayerSection_Yellow__3jB6C\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"MainContainer\":\"PlaylistSection_MainContainer__2svXA\"};","export const PLAYLIST_API = 'https://5d76bf96515d1a0014085cf9.mockapi.io/playlist'\rexport const VIDEO_DATA = 'https://5d76bf96515d1a0014085cf9.mockapi.io/video/'","import React from 'react'\rimport axios from 'axios'\r\rimport classes from './PlayerSection.module.css'\rimport { VIDEO_DATA} from \"../../Utils/APIEndpoints\";\r\rclass PlayerSection extends React.Component {\r\r    state = {\r        id: 1,\r        data: ''\r    }\r\r    componentDidMount() {\r    axios.get(VIDEO_DATA + this.state.id)\r        .then((response) => {\r            this.setState({data: response.data})\r        })\r    }\r\r    componentDidUpdate(prevProps, prevState, snapshot) {\r        if(this.state.id != this.props.match.params.vid) {\r            axios.get(VIDEO_DATA + this.props.currentId)\r                .then((response) => {\r                    this.setState({id: this.props.currentId, data: response.data})\r                })\r        }\r    }\r\r    render() {\r        return (\r            <div className={classes.MainContainer}>\r                <iframe id=\"video-player\" src={`https://player.vimeo.com/video/${this.state.data.vimeoId}`} frameBorder=\"0\" webkitallowfullscreen mozallowfullscreen allowFullScreen className={classes.Video}/>\r                <div className={classes.DescriptionContainer}>\r                    <div className={classes.DetailsSection}>\r                        <span className={classes.Views}>{this.state.data.views}</span>\r                        <div className={classes.Icons}>\r                            <span className={classes.Like}><i\r                                className={`${\"far fa-heart\"} ${this.state.data.isLiked ? classes.Yellow : null}`}></i></span>\r                            <span className={classes.Comments}><i\r                                className=\"far fa-comment-alt\"></i></span>\r                            <span className={classes.Bookmark}><i\r                                className={`${\"far fa-bookmark\"} ${this.state.data.isLiked ? classes.Yellow : null}`}> </i></span>\r                        </div>\r                    </div>\r                    <h3 className={classes.DescTitle}>{this.state.data.title}</h3>\r                    <p className={classes.Description}>{this.state.data.description}</p>\r                </div>\r            </div>\r        )\r    }\r}\r\rexport default PlayerSection","import React from 'react';\nimport { Link } from 'react-router-dom'\n\nimport classes from './VideoCard.module.css';\n\nclass VideoCard extends React.Component {\n    state = {\n        id: 1,\n    }\n\n    handleClick = () => {\n        this.props.parentState(this.props.vidId)\n    }\n\n    render() {\n        return(\n            <Link to={`/${this.props.vidId}`}  className={classes.Link}>\n                <div onClick={this.handleClick} className={`${classes.link} ${this.props.videoId == this.props.vidId ? classes.Yellow : null}`} >\n                    <img className={classes.Thumbnail} src={this.props.thumbnail} alt=\"Video Thumbnail\" />\n                    <h3 className={classes.Title}>{this.props.title}</h3>\n                </div>\n            </Link>\n        );\n    }\n}\n\nexport default VideoCard;","import React from 'react'\rimport axios from 'axios'\rimport classes from './PlaylistSection.module.css'\rimport VideoCard from \"../VideoCard/VideoCard\";\rimport { PLAYLIST_API} from \"../../Utils/APIEndpoints\";\r\rclass PlaylistSection extends React.Component {\r\r    state = {\r        response : [],\r    }\r\r    componentDidMount() {\r        axios.get(PLAYLIST_API)\r            .then((response) => {\r                this.setState({\r                    response : response.data\r                })\r            })\r        this.props.history.push('/1')\r    }\r\r    render() {\r        return(\r            <div className={classes.MainContainer}>\r                {this.state.response.map(data => <VideoCard ID={this.props.videoId} parentState={this.props.parentState} {...this.props} key={data.id} vidId={data.id} thumbnail={data.thumbnail} title={data.title}/>)}\r            </div>\r        )\r    }\r}\r\rexport default PlaylistSection;","import React from 'react';\nimport { Route , BrowserRouter } from \"react-router-dom\";\nimport './App.css';\n\nimport PlayerSection from './Components/PlayerSection/PlayerSection'\nimport PlaylistSection from './Components/PlaylistSection/PlaylistSection'\n\nclass App extends React.Component {\n\n    state = {\n        id: 1,\n    }\n\n    changeId = (videoId) => {\n        this.setState({id : videoId})\n    }\n\n    render() {\n        return(\n        <BrowserRouter>\n            <h1 className='Title'>The Video Player</h1>\n            <div className='App'>\n                <div className='left'>\n                    <Route path={\"/:vid\"} render={(props) => {\n                        return <PlayerSection currentId={this.state.id} {...props}/>}}/>\n                </div>\n                <div className='right'>\n                    <Route path={`/`} render={(props) => <PlaylistSection parentState={this.changeId} {...props} videoId={props.location.pathname.split('/')[1]} />} />\n                </div>\n            </div>\n        </BrowserRouter>\n    )}\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}